def divideAndConquer_Max(arr, ind, len):\n\tmaximum = -1;\n\n\tif (ind >= len - 2):\n\t\tif (arr[ind] > arr[ind + 1]):\n\t\t\treturn arr[ind];\n\t\telse:\n\t\t\treturn arr[ind + 1];\n\n\n\nmaximum = divideAndConquer_Max(arr, ind + 1, len);\n\n\tif (arr[ind] > maximum):\n\t\t\treturn arr[ind];\n\telse:\n\t\t\treturn maximum;\n\n\ndef divideAndConquer_Min(arr, ind, len):\n\tminimum = 0;\n\tif (ind >= len - 2):\n\t\tif (arr[ind] < arr[ind + 1]):\n\t\t\treturn arr[ind];\n\t\telse:\n\t\t\treturn arr[ind + 1];\n\n\tminimum = divideAndConquer_Min(arr, ind + 1, len);\n\n\tif (arr[ind] < minimum):\n\t\treturn arr[ind];\n\telse:\n\t\treturn minimum;\n\n\nif __name__ == '__main__':\n\n\nminimum, maximum = 0, -1;\n\n\n\tarr = [6, 4, 8, 90, 12, 56, 7, 1, 63];\n\n\tmaximum = divideAndConquer_Max(arr, 0, 9);\n\tminimum = divideAndConquer_Min(arr, 0, 9);\n\n\tprint("The minimum number in the array is: ", minimum);\n\tprint("The maximum number in the array is: ", maximum);